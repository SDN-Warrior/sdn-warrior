<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nsx on SDN-Warrior | Daniel Krieger</title>
    <link>https://sdn-warrior.org/tags/nsx/</link>
    <description>Recent content in Nsx on SDN-Warrior | Daniel Krieger</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Daniel Krieger</copyright>
    <lastBuildDate>Mon, 26 Aug 2024 19:49:23 +0100</lastBuildDate>
    <atom:link href="https://sdn-warrior.org/tags/nsx/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Nsx Integration Fortigate</title>
      <link>https://sdn-warrior.org/posts/nsx-integration-fortigate/</link>
      <pubDate>Mon, 26 Aug 2024 19:49:23 +0100</pubDate>
      <guid>https://sdn-warrior.org/posts/nsx-integration-fortigate/</guid>
      <description>&lt;h2 id=&#34;nsx-integration-for-fortinet-fortigate-firewalls&#34;&gt;NSX integration for Fortinet Fortigate Firewalls&lt;/h2&gt;&#xA;&lt;p&gt;Modern SDN solutions are flexible, fast and effective. The rules of the classic perimeter firewall should be exactly the same. To make life easier, Fortinet has an NSX integration that allows us to write our perimeter rules to dynamic NSX groups.&lt;/p&gt;&#xA;&lt;h2 id=&#34;first-things-first&#34;&gt;First things first&lt;/h2&gt;&#xA;&lt;p&gt;The Fortinet NSX integration works via a so-called external connector. For this purpose, the Fortigate contacts the NSX Manager at regular intervals and updates the previously imported groups.&#xA;This allows us to use dynamic groups that were previously created in NSX using tags, for example.&lt;/p&gt;</description>
    </item>
    <item>
      <title>NSX Identity Firewall â€“ A Case Study With the Flavour VDI</title>
      <link>https://sdn-warrior.org/posts/nsx-idfw-vdi/</link>
      <pubDate>Fri, 02 Aug 2024 08:34:23 +0100</pubDate>
      <guid>https://sdn-warrior.org/posts/nsx-idfw-vdi/</guid>
      <description>&lt;aside class=&#34;admonition info&#34;&gt;&#xD;&#xA;        &lt;div class=&#34;admonition-title&#34;&gt;&#xD;&#xA;            &lt;div class=&#34;icon&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; width=&#34;24&#34; height=&#34;24&#34; viewBox=&#34;0 0 24 24&#34; fill=&#34;none&#34; stroke=&#34;currentColor&#34;&#xD;&#xA;      stroke-width=&#34;2&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; class=&#34;feather feather-info&#34;&gt;&#xD;&#xA;      &lt;circle cx=&#34;12&#34; cy=&#34;12&#34; r=&#34;10&#34;&gt;&lt;/circle&gt;&#xD;&#xA;      &lt;line x1=&#34;12&#34; y1=&#34;16&#34; x2=&#34;12&#34; y2=&#34;12&#34;&gt;&lt;/line&gt;&#xD;&#xA;      &lt;line x1=&#34;12&#34; y1=&#34;8&#34; x2=&#34;12.01&#34; y2=&#34;8&#34;&gt;&lt;/line&gt;&#xD;&#xA;   &lt;/svg&gt;&lt;/div&gt;&lt;b&gt;Disclaimer&lt;/b&gt;&#xD;&#xA;        &lt;/div&gt;&#xD;&#xA;        &lt;div class=&#34;admonition-content&#34;&gt;There are of course other ways of using the Identity Firewall. This is the way I have used it with my customers so far. Of course, the whole thing is colored by personal preferences, experiences and customer requirements so take this as an idea for your own implementations.&lt;/div&gt;&#xD;&#xA;    &lt;/aside&gt;&#xA;&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;&#xA;&lt;p&gt;A customer of mine has the use case that his entire environment must be micro-segmented. Of course, this does not stop at the VDI environment. Since my customer uses non-persistent VDIs (the VMs are deleted after each logoff), no tags can be used for the security groups. After deleting the VM, the tag would also be removed and a new VDI would have no tags and would thus be isolated. This can be solved with automation or with the Identity Firewall (a combination of both solutions is also conceivable and makes sense). In the first step, my customer opted for the Identity Firewall because it allows generic VDIs to be used and authorisations to resources can be conveniently controlled via the customer AD. In addition, each user/user group receives individual firewall rules, which corresponds to the need-to-know principle.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
